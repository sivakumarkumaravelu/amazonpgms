/* Problem Name is &&& Longest Word &&& PLEASE DO NOT REMOVE THIS LINE. */

/**
 * Instructions to candidate.
 *  1) Given a a string of letters and a dictionary, the function longestWord should
 *     find the longest word or words in the dictionary that can be made from the letters
 *     Input: letters = "oet", dictionary = ["to","toe","toes"]
 *     Output: ["toe"]
 *     Only lowercase letters will occur in the dictionary and the letters
 *     The length of letters will be between 1 and 10 characters
 *     The solution should work well for a dictionary of over 100,000 words
 *  2) Run this code in the REPL to observe its behaviour.
 *  3) Consider adding some additional tests in doTestsPass().
 *  4) Implement the longestWord() method correctly.
 *  5) If time permits, introduce '?' which can represent any letter.  "to?" could match to "toe", "ton" etc
 */

const longestWord = (letters, words) => {
  // TODO
  // create results array
  var results = [];
  words.forEach(function(word){
    if (word.split("").every(function(letter) {
      return letters.includes(letter)
    })) {
      results.push(word);
      console.log(results);
    }
  })
  console.log("Int results: "+results);
  var maxLength = results[results.length-1].length;
  return results.filter(function(word){
    return word.length === maxLength;
  });
  // iterate over words in dictionary
    // check if all letters are included in ' var letters'
      // if yes, push to results array
  // return word with longest length

  // return array of strings
}

const arraysEqual = (arr1, arr2) => {
  return (arr1.length !== arr2.length)
   ? false
   : arr1.every(value => {
     return arr2.includes(value);
   });
}

const doTestsPass = () => {
  const words = ["to", "toe", "toes", "doe", "dog", "god", "dogs", "book", "banana"];

  let result = arraysEqual(["toe"], longestWord("toe", words));
  result = result && arraysEqual(["toes", "dogs"], longestWord("osetdg", words));
  
  return result;
}

/**
 * Main execution entry.
 */
if (doTestsPass()) {
  console.log("All tests pass!");
} else {
  console.error("There are test failures.");
}




[ 'to' ]
[ 'to', 'toe' ]
Int results: to,toe
[ 'to' ]
[ 'to', 'toe' ]
[ 'to', 'toe', 'toes' ]
[ 'to', 'toe', 'toes', 'doe' ]
[ 'to', 'toe', 'toes', 'doe', 'dog' ]
[ 'to', 'toe', 'toes', 'doe', 'dog', 'god' ]
[ 'to', 'toe', 'toes', 'doe', 'dog', 'god', 'dogs' ]
Int results: to,toe,toes,doe,dog,god,dogs
